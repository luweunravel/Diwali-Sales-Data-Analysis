# -*- coding: utf-8 -*-
"""2nd_lab.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Sj63XnIZHGe-6C65pN85rWxxQzgHWhma
"""

# Commented out IPython magic to ensure Python compatibility.
#import python libraries
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt # visualizing data
# %matplotlib inline
import seaborn as sns

from google.colab import drive
drive.mount('/content/drive')

#import csv files

df = pd.read_csv('/content/drive/MyDrive/Diwali Sales Data.csv', encoding = 'unicode_escape')

df.shape

df.head()

df.info()

#drop unrelated/blank columns

df.drop(['Status','unnamed1'], axis=1, inplace = True)

pd.isnull(df).sum()

#drop null values

df.dropna(inplace = True)

# change data type

df['Amount'] = df['Amount'].astype('int')

df['Amount'].dtypes

df.columns

df.rename(columns = {'Marital_Status' : 'Shaadi'})

df[['Age','Orders','Amount']].describe()

"""**Exploratory Data Ananlysis**"""

# plotting a bar chart for gender and it's count

ax = sns.countplot(x= 'Gender', data = df)

for bars in ax.containers:
  ax.bar_label(bars)

sales_age = df.groupby(['Age Group'], as_index = False)['Amount'].sum().sort_values(by='Amount', ascending=False)
sns.barplot(x = 'Age Group', y= 'Amount', data = sales_age)

# total number of orders from top 10 states

sales_state = df.groupby(['State'], as_index=False)['Orders'].sum().sort_values(by='Orders', ascending=False).head(10)
sns.barplot(x = 'State', y= 'Orders', data = sales_state)

sales_states=df.groupby(['State'],as_index=False)['Amount'].sum().sort_values(by='Amount',ascending=False).head(10)

sns.set(rc={'figure.figsize':(15,5)})
sns.barplot(data=sales_states,x='State',y='Amount')

"""Marital **Status**"""

sales_state = df.groupby(['Marital_Status', 'Gender'], as_index=False)['Amount'].sum().sort_values(by='Amount', ascending=False)
sns.set(rc={'figure.figsize':(6,5)})
sns.barplot(data=sales_state, x='Marital_Status', y='Amount', hue='Gender')

sns.set(rc={'figure.figsize':(20,8)})
ax = sns.countplot(data=df, x='Occupation')

for bars in ax.containers:
  ax.bar_label(bars)

sales_state = df.groupby(['Occupation'], as_index=False)['Amount'].sum().sort_values(by='Amount', ascending=False)
sns.set(rc={'figure.figsize':(20,8)})
sns.barplot(data=sales_state, x='Occupation', y='Amount')

sns.set(rc={'figure.figsize':(20,8)})
ax = sns.countplot(data=df, x='Product_Category')

for bars in ax.containers:
  ax.bar_label(bars)

sales_state = df.groupby(['Product_Category'], as_index=False)['Amount'].sum().sort_values(by='Amount', ascending=False).head(10)

sns.set(rc={'figure.figsize':(20,8)})
sns.barplot(data=sales_state, x='Product_Category', y='Amount')

sales_states=df.groupby(['Product_ID'],as_index=False)['Orders'].sum().sort_values(by='Orders',ascending=False).head(10)

sns.set(rc={'figure.figsize':(20,5)})
sns.barplot(data=sales_states,x='Product_ID',y='Orders')